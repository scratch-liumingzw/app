{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/common/transform.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/util/log.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/formatters/util.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/extension-support/extension-worker.js","webpack:///(webpack)/buildin/global.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/extension-support/argument-type.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/extension-support/block-type.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/dispatch/worker-dispatch.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/dispatch/shared-dispatch.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/index.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/common/minilog.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/microee/index.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/common/filter.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/console.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/formatters/color.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/formatters/minilog.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/array.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/localstorage.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/node_modules/minilog/lib/web/jquery_simple.js","webpack:////Users/liuming1/Documents/source/scratch-respberry-pi/scratch-vm/src/extension-support/target-type.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Transform","mixin","write","level","args","this","emit","end","removeAllListeners","pipe","dest","onItem","apply","Array","slice","arguments","onEnd","_isStdio","on","when","from","match","removeListener","unpipe","format","Error","join","k","minilog","require","enable","hex","black","red","green","yellow","blue","magenta","cyan","gray","purple","fg","isInverse","ArgumentType","BlockType","dispatch","TargetType","global","Scratch","extensionWorker","constructor","nextExtensionId","initialRegistrations","waitForConnection","then","x","id","extension","workerId","importScripts","Promise","all","e","extensions","register","extensionObject","extensionId","push","serviceName","promise","setService","g","Function","window","ANGLE","BOOLEAN","COLOR","NUMBER","STRING","MATRIX","NOTE","IMAGE","BUTTON","COMMAND","CONDITIONAL","EVENT","HAT","LOOP","REPORTER","SharedDispatch","log","super","_connectionPromise","resolve","_onConnect","services","_onMessage","self","onmessage","service","provider","warn","_remoteCall","_getServiceProvider","isRemote","_onDispatchMessage","worker","message","method","setTimeout","close","error","callbacks","nextResponseId","transferCall","transfer","_remoteTransferCall","result","reject","_isRemoteService","responseId","_storeCallbacks","length","yield","pop","postMessage","_deliverResponse","JSON","stringify","event","data","Minilog","oldEnable","oldDisable","disable","isChrome","navigator","test","userAgent","console","defaultBackend","parse","localStorage","location","search","RegExp","exec","decodeURIComponent","minilogSettings","backends","array","browser","jQuery","Filter","undefined","debug","info","suggest","defaultFormatter","M","_events","ev","cb","splice","listeners","once","levelMap","enabled","defaultResult","clear","rule","allow","_white","deny","_black","len","Math","max","newlines","logger","concat","replace","formatters","color","colors","fn","cache","empty","Date","toString","cid","valueOf","AjaxLogger","options","url","timer","interval","extras","init","ajaxData","logs","isEmptyObject","extend","ajax","type","processData","contentType","timeout","success","status","jqxhr","always","jQueryWait","onDone","$","SPRITE","STAGE"],"mappings":"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","file":"extension-worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","var microee = require('microee');\n\n// Implements a subset of Node's stream.Transform - in a cross-platform manner.\nfunction Transform() {}\n\nmicroee.mixin(Transform);\n\n// The write() signature is different from Node's\n// --> makes it much easier to work with objects in logs.\n// One of the lessons from v1 was that it's better to target\n// a good browser rather than the lowest common denominator\n// internally.\n// If you want to use external streams, pipe() to ./stringify.js first.\nTransform.prototype.write = function(name, level, args) {\n  this.emit('item', name, level, args);\n};\n\nTransform.prototype.end = function() {\n  this.emit('end');\n  this.removeAllListeners();\n};\n\nTransform.prototype.pipe = function(dest) {\n  var s = this;\n  // prevent double piping\n  s.emit('unpipe', dest);\n  // tell the dest that it's being piped to\n  dest.emit('pipe', s);\n\n  function onItem() {\n    dest.write.apply(dest, Array.prototype.slice.call(arguments));\n  }\n  function onEnd() { !dest._isStdio && dest.end(); }\n\n  s.on('item', onItem);\n  s.on('end', onEnd);\n\n  s.when('unpipe', function(from) {\n    var match = (from === dest) || typeof from == 'undefined';\n    if(match) {\n      s.removeListener('item', onItem);\n      s.removeListener('end', onEnd);\n      dest.emit('unpipe');\n    }\n    return match;\n  });\n\n  return dest;\n};\n\nTransform.prototype.unpipe = function(from) {\n  this.emit('unpipe', from);\n  return this;\n};\n\nTransform.prototype.format = function(dest) {\n  throw new Error([\n    'Warning: .format() is deprecated in Minilog v2! Use .pipe() instead. For example:',\n    'var Minilog = require(\\'minilog\\');',\n    'Minilog',\n    '  .pipe(Minilog.backends.console.formatClean)',\n    '  .pipe(Minilog.backends.console);'].join('\\n'));\n};\n\nTransform.mixin = function(dest) {\n  var o = Transform.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\n\nmodule.exports = Transform;\n","const minilog = require('minilog');\nminilog.enable();\n\nmodule.exports = minilog('vm');\n","var hex = {\n  black: '#000',\n  red: '#c23621',\n  green: '#25bc26',\n  yellow: '#bbbb00',\n  blue:  '#492ee1',\n  magenta: '#d338d3',\n  cyan: '#33bbc8',\n  gray: '#808080',\n  purple: '#708'\n};\nfunction color(fg, isInverse) {\n  if(isInverse) {\n    return 'color: #fff; background: '+hex[fg]+';';\n  } else {\n    return 'color: '+hex[fg]+';';\n  }\n}\n\nmodule.exports = color;\n","/* eslint-env worker */\n\nconst ArgumentType = require('../extension-support/argument-type');\nconst BlockType = require('../extension-support/block-type');\nconst dispatch = require('../dispatch/worker-dispatch');\nconst TargetType = require('../extension-support/target-type');\n\nclass ExtensionWorker {\n    constructor () {\n        this.nextExtensionId = 0;\n\n        this.initialRegistrations = [];\n\n        dispatch.waitForConnection.then(() => {\n            dispatch.call('extensions', 'allocateWorker').then(x => {\n                const [id, extension] = x;\n                this.workerId = id;\n\n                try {\n                    importScripts(extension);\n\n                    const initialRegistrations = this.initialRegistrations;\n                    this.initialRegistrations = null;\n\n                    Promise.all(initialRegistrations).then(() => dispatch.call('extensions', 'onWorkerInit', id));\n                } catch (e) {\n                    dispatch.call('extensions', 'onWorkerInit', id, e);\n                }\n            });\n        });\n\n        this.extensions = [];\n    }\n\n    register (extensionObject) {\n        const extensionId = this.nextExtensionId++;\n        this.extensions.push(extensionObject);\n        const serviceName = `extension.${this.workerId}.${extensionId}`;\n        const promise = dispatch.setService(serviceName, extensionObject)\n            .then(() => dispatch.call('extensions', 'registerExtensionService', serviceName));\n        if (this.initialRegistrations) {\n            this.initialRegistrations.push(promise);\n        }\n        return promise;\n    }\n}\n\nglobal.Scratch = global.Scratch || {};\nglobal.Scratch.ArgumentType = ArgumentType;\nglobal.Scratch.BlockType = BlockType;\nglobal.Scratch.TargetType = TargetType;\n\n/**\n * Expose only specific parts of the worker to extensions.\n */\nconst extensionWorker = new ExtensionWorker();\nglobal.Scratch.extensions = {\n    register: extensionWorker.register.bind(extensionWorker)\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Block argument types\n * @enum {string}\n */\nconst ArgumentType = {\n    /**\n     * Numeric value with angle picker\n     */\n    ANGLE: 'angle',\n\n    /**\n     * Boolean value with hexagonal placeholder\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * Numeric value with color picker\n     */\n    COLOR: 'color',\n\n    /**\n     * Numeric value with text field\n     */\n    NUMBER: 'number',\n\n    /**\n     * String value with text field\n     */\n    STRING: 'string',\n\n    /**\n     * String value with matrix field\n     */\n    MATRIX: 'matrix',\n\n    /**\n     * MIDI note number with note picker (piano) field\n     */\n    NOTE: 'note',\n\n    /**\n     * Inline image on block (as part of the label)\n     */\n    IMAGE: 'image'\n};\n\nmodule.exports = ArgumentType;\n","/**\n * Types of block\n * @enum {string}\n */\nconst BlockType = {\n    /**\n     * Boolean reporter with hexagonal shape\n     */\n    BOOLEAN: 'Boolean',\n\n    /**\n     * A button (not an actual block) for some special action, like making a variable\n     */\n    BUTTON: 'button',\n\n    /**\n     * Command block\n     */\n    COMMAND: 'command',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * The thread continues with the next block whether or not a child branch ran.\n     */\n    CONDITIONAL: 'conditional',\n\n    /**\n     * Specialized hat block with no implementation function\n     * This stack only runs if the corresponding event is emitted by other code.\n     */\n    EVENT: 'event',\n\n    /**\n     * Hat block which conditionally starts a block stack\n     */\n    HAT: 'hat',\n\n    /**\n     * Specialized command block which may or may not run a child branch\n     * If a child branch runs, the thread evaluates the loop block again.\n     */\n    LOOP: 'loop',\n\n    /**\n     * General reporter with numeric or string value\n     */\n    REPORTER: 'reporter'\n};\n\nmodule.exports = BlockType;\n","const SharedDispatch = require('./shared-dispatch');\n\nconst log = require('../util/log');\n\n/**\n * This class provides a Worker with the means to participate in the message dispatch system managed by CentralDispatch.\n * From any context in the messaging system, the dispatcher's \"call\" method can call any method on any \"service\"\n * provided in any participating context. The dispatch system will forward function arguments and return values across\n * worker boundaries as needed.\n * @see {CentralDispatch}\n */\nclass WorkerDispatch extends SharedDispatch {\n    constructor () {\n        super();\n\n        /**\n         * This promise will be resolved when we have successfully connected to central dispatch.\n         * @type {Promise}\n         * @see {waitForConnection}\n         * @private\n         */\n        this._connectionPromise = new Promise(resolve => {\n            this._onConnect = resolve;\n        });\n\n        /**\n         * Map of service name to local service provider.\n         * If a service is not listed here, it is assumed to be provided by another context (another Worker or the main\n         * thread).\n         * @see {setService}\n         * @type {object}\n         */\n        this.services = {};\n\n        this._onMessage = this._onMessage.bind(this, self);\n        if (typeof self !== 'undefined') {\n            self.onmessage = this._onMessage;\n        }\n    }\n\n    /**\n     * @returns {Promise} a promise which will resolve upon connection to central dispatch. If you need to make a call\n     * immediately on \"startup\" you can attach a 'then' to this promise.\n     * @example\n     *      dispatch.waitForConnection.then(() => {\n     *          dispatch.call('myService', 'hello');\n     *      })\n     */\n    get waitForConnection () {\n        return this._connectionPromise;\n    }\n\n    /**\n     * Set a local object as the global provider of the specified service.\n     * WARNING: Any method on the provider can be called from any worker within the dispatch system.\n     * @param {string} service - a globally unique string identifying this service. Examples: 'vm', 'gui', 'extension9'.\n     * @param {object} provider - a local object which provides this service.\n     * @returns {Promise} - a promise which will resolve once the service is registered.\n     */\n    setService (service, provider) {\n        if (this.services.hasOwnProperty(service)) {\n            log.warn(`Worker dispatch replacing existing service provider for ${service}`);\n        }\n        this.services[service] = provider;\n        return this.waitForConnection.then(() => this._remoteCall(self, 'dispatch', 'setService', service));\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @override\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        // if we don't have a local service by this name, contact central dispatch by calling `postMessage` on self\n        const provider = this.services[service];\n        return {\n            provider: provider || self,\n            isRemote: !provider\n        };\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @override\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @protected\n     */\n    _onDispatchMessage (worker, message) {\n        let promise;\n        switch (message.method) {\n        case 'handshake':\n            promise = this._onConnect();\n            break;\n        case 'terminate':\n            // Don't close until next tick, after sending confirmation back\n            setTimeout(() => self.close(), 0);\n            promise = Promise.resolve();\n            break;\n        default:\n            log.error(`Worker dispatch received message for unknown method: ${message.method}`);\n        }\n        return promise;\n    }\n}\n\nmodule.exports = new WorkerDispatch();\n","const log = require('../util/log');\n\n/**\n * @typedef {object} DispatchCallMessage - a message to the dispatch system representing a service method call\n * @property {*} responseId - send a response message with this response ID. See {@link DispatchResponseMessage}\n * @property {string} service - the name of the service to be called\n * @property {string} method - the name of the method to be called\n * @property {Array|undefined} args - the arguments to be passed to the method\n */\n\n/**\n * @typedef {object} DispatchResponseMessage - a message to the dispatch system representing the results of a call\n * @property {*} responseId - a copy of the response ID from the call which generated this response\n * @property {*|undefined} error - if this is truthy, then it contains results from a failed call (such as an exception)\n * @property {*|undefined} result - if error is not truthy, then this contains the return value of the call (if any)\n */\n\n/**\n * @typedef {DispatchCallMessage|DispatchResponseMessage} DispatchMessage\n * Any message to the dispatch system.\n */\n\n/**\n * The SharedDispatch class is responsible for dispatch features shared by\n * {@link CentralDispatch} and {@link WorkerDispatch}.\n */\nclass SharedDispatch {\n    constructor () {\n        /**\n         * List of callback registrations for promises waiting for a response from a call to a service on another\n         * worker. A callback registration is an array of [resolve,reject] Promise functions.\n         * Calls to local services don't enter this list.\n         * @type {Array.<Function[]>}\n         */\n        this.callbacks = [];\n\n        /**\n         * The next response ID to be used.\n         * @type {int}\n         */\n        this.nextResponseId = 0;\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.call('vm', 'setData', 'cat', 42);\n     *      // this finds the worker for the 'vm' service, then on that worker calls:\n     *      vm.setData('cat', 42);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    call (service, method, ...args) {\n        return this.transferCall(service, method, null, ...args);\n    }\n\n    /**\n     * Call a particular method on a particular service, regardless of whether that service is provided locally or on\n     * a worker. If the service is provided by a worker, the `args` will be copied using the Structured Clone\n     * algorithm, except for any items which are also in the `transfer` list. Ownership of those items will be\n     * transferred to the worker, and they should not be used after this call.\n     * @example\n     *      dispatcher.transferCall('vm', 'setData', [myArrayBuffer], 'cat', myArrayBuffer);\n     *      // this finds the worker for the 'vm' service, transfers `myArrayBuffer` to it, then on that worker calls:\n     *      vm.setData('cat', myArrayBuffer);\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    transferCall (service, method, transfer, ...args) {\n        try {\n            const {provider, isRemote} = this._getServiceProvider(service);\n            if (provider) {\n                if (isRemote) {\n                    return this._remoteTransferCall(provider, service, method, transfer, ...args);\n                }\n\n                const result = provider[method].apply(provider, args);\n                return Promise.resolve(result);\n            }\n            return Promise.reject(new Error(`Service not found: ${service}`));\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Check if a particular service lives on another worker.\n     * @param {string} service - the service to check.\n     * @returns {boolean} - true if the service is remote (calls must cross a Worker boundary), false otherwise.\n     * @private\n     */\n    _isRemoteService (service) {\n        return this._getServiceProvider(service).isRemote;\n    }\n\n    /**\n     * Like {@link call}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteCall (provider, service, method, ...args) {\n        return this._remoteTransferCall(provider, service, method, null, ...args);\n    }\n\n    /**\n     * Like {@link transferCall}, but force the call to be posted through a particular communication channel.\n     * @param {object} provider - send the call through this object's `postMessage` function.\n     * @param {string} service - the name of the service.\n     * @param {string} method - the name of the method.\n     * @param {Array} [transfer] - objects to be transferred instead of copied. Must be present in `args` to be useful.\n     * @param {*} [args] - the arguments to be copied to the method, if any.\n     * @returns {Promise} - a promise for the return value of the service method.\n     */\n    _remoteTransferCall (provider, service, method, transfer, ...args) {\n        return new Promise((resolve, reject) => {\n            const responseId = this._storeCallbacks(resolve, reject);\n\n            /** @TODO: remove this hack! this is just here so we don't try to send `util` to a worker */\n            if ((args.length > 0) && (typeof args[args.length - 1].yield === 'function')) {\n                args.pop();\n            }\n\n            if (transfer) {\n                provider.postMessage({service, method, responseId, args}, transfer);\n            } else {\n                provider.postMessage({service, method, responseId, args});\n            }\n        });\n    }\n\n    /**\n     * Store callback functions pending a response message.\n     * @param {Function} resolve - function to call if the service method returns.\n     * @param {Function} reject - function to call if the service method throws.\n     * @returns {*} - a unique response ID for this set of callbacks. See {@link _deliverResponse}.\n     * @protected\n     */\n    _storeCallbacks (resolve, reject) {\n        const responseId = this.nextResponseId++;\n        this.callbacks[responseId] = [resolve, reject];\n        return responseId;\n    }\n\n    /**\n     * Deliver call response from a worker. This should only be called as the result of a message from a worker.\n     * @param {int} responseId - the response ID of the callback set to call.\n     * @param {DispatchResponseMessage} message - the message containing the response value(s).\n     * @protected\n     */\n    _deliverResponse (responseId, message) {\n        try {\n            const [resolve, reject] = this.callbacks[responseId];\n            delete this.callbacks[responseId];\n            if (message.error) {\n                reject(message.error);\n            } else {\n                resolve(message.result);\n            }\n        } catch (e) {\n            log.error(`Dispatch callback failed: ${JSON.stringify(e)}`);\n        }\n    }\n\n    /**\n     * Handle a message event received from a connected worker.\n     * @param {Worker} worker - the worker which sent the message, or the global object if running in a worker.\n     * @param {MessageEvent} event - the message event to be handled.\n     * @protected\n     */\n    _onMessage (worker, event) {\n        /** @type {DispatchMessage} */\n        const message = event.data;\n        message.args = message.args || [];\n        let promise;\n        if (message.service) {\n            if (message.service === 'dispatch') {\n                promise = this._onDispatchMessage(worker, message);\n            } else {\n                promise = this.call(message.service, message.method, ...message.args);\n            }\n        } else if (typeof message.responseId === 'undefined') {\n            log.error(`Dispatch caught malformed message from a worker: ${JSON.stringify(event)}`);\n        } else {\n            this._deliverResponse(message.responseId, message);\n        }\n        if (promise) {\n            if (typeof message.responseId === 'undefined') {\n                log.error(`Dispatch message missing required response ID: ${JSON.stringify(event)}`);\n            } else {\n                promise.then(\n                    result => worker.postMessage({responseId: message.responseId, result}),\n                    error => worker.postMessage({responseId: message.responseId, error})\n                );\n            }\n        }\n    }\n\n    /**\n     * Fetch the service provider object for a particular service name.\n     * @abstract\n     * @param {string} service - the name of the service to look up\n     * @returns {{provider:(object|Worker), isRemote:boolean}} - the means to contact the service, if found\n     * @protected\n     */\n    _getServiceProvider (service) {\n        throw new Error(`Could not get provider for ${service}: _getServiceProvider not implemented`);\n    }\n\n    /**\n     * Handle a call message sent to the dispatch service itself\n     * @abstract\n     * @param {Worker} worker - the worker which sent the message.\n     * @param {DispatchCallMessage} message - the message to be handled.\n     * @returns {Promise|undefined} - a promise for the results of this operation, if appropriate\n     * @private\n     */\n    _onDispatchMessage (worker, message) {\n        throw new Error(`Unimplemented dispatch message handler cannot handle ${message.method} method`);\n    }\n}\n\nmodule.exports = SharedDispatch;\n","var Minilog = require('../common/minilog.js');\n\nvar oldEnable = Minilog.enable,\n    oldDisable = Minilog.disable,\n    isChrome = (typeof navigator != 'undefined' && /chrome/i.test(navigator.userAgent)),\n    console = require('./console.js');\n\n// Use a more capable logging backend if on Chrome\nMinilog.defaultBackend = (isChrome ? console.minilog : console);\n\n// apply enable inputs from localStorage and from the URL\nif(typeof window != 'undefined') {\n  try {\n    Minilog.enable(JSON.parse(window.localStorage['minilogSettings']));\n  } catch(e) {}\n  if(window.location && window.location.search) {\n    var match = RegExp('[?&]minilog=([^&]*)').exec(window.location.search);\n    match && Minilog.enable(decodeURIComponent(match[1]));\n  }\n}\n\n// Make enable also add to localStorage\nMinilog.enable = function() {\n  oldEnable.call(Minilog, true);\n  try { window.localStorage['minilogSettings'] = JSON.stringify(true); } catch(e) {}\n  return this;\n};\n\nMinilog.disable = function() {\n  oldDisable.call(Minilog);\n  try { delete window.localStorage.minilogSettings; } catch(e) {}\n  return this;\n};\n\nexports = module.exports = Minilog;\n\nexports.backends = {\n  array: require('./array.js'),\n  browser: Minilog.defaultBackend,\n  localStorage: require('./localstorage.js'),\n  jQuery: require('./jquery_simple.js')\n};\n","var Transform = require('./transform.js'),\n    Filter = require('./filter.js');\n\nvar log = new Transform(),\n    slice = Array.prototype.slice;\n\nexports = module.exports = function create(name) {\n  var o   = function() { log.write(name, undefined, slice.call(arguments)); return o; };\n  o.debug = function() { log.write(name, 'debug', slice.call(arguments)); return o; };\n  o.info  = function() { log.write(name, 'info',  slice.call(arguments)); return o; };\n  o.warn  = function() { log.write(name, 'warn',  slice.call(arguments)); return o; };\n  o.error = function() { log.write(name, 'error', slice.call(arguments)); return o; };\n  o.log   = o.debug; // for interface compliance with Node and browser consoles\n  o.suggest = exports.suggest;\n  o.format = log.format;\n  return o;\n};\n\n// filled in separately\nexports.defaultBackend = exports.defaultFormatter = null;\n\nexports.pipe = function(dest) {\n  return log.pipe(dest);\n};\n\nexports.end = exports.unpipe = exports.disable = function(from) {\n  return log.unpipe(from);\n};\n\nexports.Transform = Transform;\nexports.Filter = Filter;\n// this is the default filter that's applied when .enable() is called normally\n// you can bypass it completely and set up your own pipes\nexports.suggest = new Filter();\n\nexports.enable = function() {\n  if(exports.defaultFormatter) {\n    return log.pipe(exports.suggest) // filter\n              .pipe(exports.defaultFormatter) // formatter\n              .pipe(exports.defaultBackend); // backend\n  }\n  return log.pipe(exports.suggest) // filter\n            .pipe(exports.defaultBackend); // formatter\n};\n\n","function M() { this._events = {}; }\nM.prototype = {\n  on: function(ev, cb) {\n    this._events || (this._events = {});\n    var e = this._events;\n    (e[ev] || (e[ev] = [])).push(cb);\n    return this;\n  },\n  removeListener: function(ev, cb) {\n    var e = this._events[ev] || [], i;\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      if(e[i] === cb || e[i].cb === cb) { e.splice(i, 1); }\n    }\n  },\n  removeAllListeners: function(ev) {\n    if(!ev) { this._events = {}; }\n    else { this._events[ev] && (this._events[ev] = []); }\n  },\n  listeners: function(ev) {\n    return (this._events ? this._events[ev] || [] : []);\n  },\n  emit: function(ev) {\n    this._events || (this._events = {});\n    var args = Array.prototype.slice.call(arguments, 1), i, e = this._events[ev] || [];\n    for(i = e.length-1; i >= 0 && e[i]; i--){\n      e[i].apply(this, args);\n    }\n    return this;\n  },\n  when: function(ev, cb) {\n    return this.once(ev, cb, true);\n  },\n  once: function(ev, cb, when) {\n    if(!cb) return this;\n    function c() {\n      if(!when) this.removeListener(ev, c);\n      if(cb.apply(this, arguments) && when) this.removeListener(ev, c);\n    }\n    c.cb = cb;\n    this.on(ev, c);\n    return this;\n  }\n};\nM.mixin = function(dest) {\n  var o = M.prototype, k;\n  for (k in o) {\n    o.hasOwnProperty(k) && (dest.prototype[k] = o[k]);\n  }\n};\nmodule.exports = M;\n","// default filter\nvar Transform = require('./transform.js');\n\nvar levelMap = { debug: 1, info: 2, warn: 3, error: 4 };\n\nfunction Filter() {\n  this.enabled = true;\n  this.defaultResult = true;\n  this.clear();\n}\n\nTransform.mixin(Filter);\n\n// allow all matching, with level >= given level\nFilter.prototype.allow = function(name, level) {\n  this._white.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\n// deny all matching, with level <= given level\nFilter.prototype.deny = function(name, level) {\n  this._black.push({ n: name, l: levelMap[level] });\n  return this;\n};\n\nFilter.prototype.clear = function() {\n  this._white = [];\n  this._black = [];\n  return this;\n};\n\nfunction test(rule, name) {\n  // use .test for RegExps\n  return (rule.n.test ? rule.n.test(name) : rule.n == name);\n};\n\nFilter.prototype.test = function(name, level) {\n  var i, len = Math.max(this._white.length, this._black.length);\n  for(i = 0; i < len; i++) {\n    if(this._white[i] && test(this._white[i], name) && levelMap[level] >= this._white[i].l) {\n      return true;\n    }\n    if(this._black[i] && test(this._black[i], name) && levelMap[level] <= this._black[i].l) {\n      return false;\n    }\n  }\n  return this.defaultResult;\n};\n\nFilter.prototype.write = function(name, level, args) {\n  if(!this.enabled || this.test(name, level)) {\n    return this.emit('item', name, level, args);\n  }\n};\n\nmodule.exports = Filter;\n","var Transform = require('../common/transform.js');\n\nvar newlines = /\\n+$/,\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var i = args.length-1;\n  if (typeof console === 'undefined' || !console.log) {\n    return;\n  }\n  if(console.log.apply) {\n    return console.log.apply(console, [name, level].concat(args));\n  } else if(JSON && JSON.stringify) {\n    // console.log.apply is undefined in IE8 and IE9\n    // for IE8/9: make console.log at least a bit less awful\n    if(args[i] && typeof args[i] == 'string') {\n      args[i] = args[i].replace(newlines, '');\n    }\n    try {\n      for(i = 0; i < args.length; i++) {\n        args[i] = JSON.stringify(args[i]);\n      }\n    } catch(e) {}\n    console.log(args.join(' '));\n  }\n};\n\nlogger.formatters = ['color', 'minilog'];\nlogger.color = require('./formatters/color.js');\nlogger.minilog = require('./formatters/minilog.js');\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js');\n\nvar colors = { debug: ['cyan'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(console[level] && console[level].apply) {\n    fn = console[level];\n    fn.apply(console, [ '%c'+name+' %c'+level, color('gray'), color.apply(color, colors[level])].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var Transform = require('../../common/transform.js'),\n    color = require('./util.js'),\n    colors = { debug: ['gray'], info: ['purple' ], warn: [ 'yellow', true ], error: [ 'red', true ] },\n    logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  var fn = console.log;\n  if(level != 'debug' && console[level]) {\n    fn = console[level];\n  }\n\n  var subset = [], i = 0;\n  if(level != 'info') {\n    for(; i < args.length; i++) {\n      if(typeof args[i] != 'string') break;\n    }\n    fn.apply(console, [ '%c'+name +' '+ args.slice(0, i).join(' '), color.apply(color, colors[level]) ].concat(args.slice(i)));\n  } else {\n    fn.apply(console, [ '%c'+name, color.apply(color, colors[level]) ].concat(args));\n  }\n};\n\n// NOP, because piping the formatted logs can only cause trouble.\nlogger.pipe = function() { };\n\nmodule.exports = logger;\n","var Transform = require('../common/transform.js'),\n    cache = [ ];\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  cache.push([ name, level, args ]);\n};\n\n// utility functions\nlogger.get = function() { return cache; };\nlogger.empty = function() { cache = []; };\n\nmodule.exports = logger;\n","var Transform = require('../common/transform.js'),\n    cache = false;\n\nvar logger = new Transform();\n\nlogger.write = function(name, level, args) {\n  if(typeof window == 'undefined' || typeof JSON == 'undefined' || !JSON.stringify || !JSON.parse) return;\n  try {\n    if(!cache) { cache = (window.localStorage.minilog ? JSON.parse(window.localStorage.minilog) : []); }\n    cache.push([ new Date().toString(), name, level, args ]);\n    window.localStorage.minilog = JSON.stringify(cache);\n  } catch(e) {}\n};\n\nmodule.exports = logger;","var Transform = require('../common/transform.js');\n\nvar cid = new Date().valueOf().toString(36);\n\nfunction AjaxLogger(options) {\n  this.url = options.url || '';\n  this.cache = [];\n  this.timer = null;\n  this.interval = options.interval || 30*1000;\n  this.enabled = true;\n  this.jQuery = window.jQuery;\n  this.extras = {};\n}\n\nTransform.mixin(AjaxLogger);\n\nAjaxLogger.prototype.write = function(name, level, args) {\n  if(!this.timer) { this.init(); }\n  this.cache.push([name, level].concat(args));\n};\n\nAjaxLogger.prototype.init = function() {\n  if(!this.enabled || !this.jQuery) return;\n  var self = this;\n  this.timer = setTimeout(function() {\n    var i, logs = [], ajaxData, url = self.url;\n    if(self.cache.length == 0) return self.init();\n    // Test each log line and only log the ones that are valid (e.g. don't have circular references).\n    // Slight performance hit but benefit is we log all valid lines.\n    for(i = 0; i < self.cache.length; i++) {\n      try {\n        JSON.stringify(self.cache[i]);\n        logs.push(self.cache[i]);\n      } catch(e) { }\n    }\n    if(self.jQuery.isEmptyObject(self.extras)) {\n        ajaxData = JSON.stringify({ logs: logs });\n        url = self.url + '?client_id=' + cid;\n    } else {\n        ajaxData = JSON.stringify(self.jQuery.extend({logs: logs}, self.extras));\n    }\n\n    self.jQuery.ajax(url, {\n      type: 'POST',\n      cache: false,\n      processData: false,\n      data: ajaxData,\n      contentType: 'application/json',\n      timeout: 10000\n    }).success(function(data, status, jqxhr) {\n      if(data.interval) {\n        self.interval = Math.max(1000, data.interval);\n      }\n    }).error(function() {\n      self.interval = 30000;\n    }).always(function() {\n      self.init();\n    });\n    self.cache = [];\n  }, this.interval);\n};\n\nAjaxLogger.prototype.end = function() {};\n\n// wait until jQuery is defined. Useful if you don't control the load order.\nAjaxLogger.jQueryWait = function(onDone) {\n  if(typeof window !== 'undefined' && (window.jQuery || window.$)) {\n    return onDone(window.jQuery || window.$);\n  } else if (typeof window !== 'undefined') {\n    setTimeout(function() { AjaxLogger.jQueryWait(onDone); }, 200);\n  }\n};\n\nmodule.exports = AjaxLogger;\n","/**\n * Default types of Target supported by the VM\n * @enum {string}\n */\nconst TargetType = {\n    /**\n     * Rendered target which can move, change costumes, etc.\n     */\n    SPRITE: 'sprite',\n\n    /**\n     * Rendered target which cannot move but can change backdrops\n     */\n    STAGE: 'stage'\n};\n\nmodule.exports = TargetType;\n"],"sourceRoot":""}